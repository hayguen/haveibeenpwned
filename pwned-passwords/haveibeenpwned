#!/bin/bash

S="$(readlink -nf "$BASH_SOURCE")"
D="$(dirname "$S")"
if [ -f "$D/pwd-full.srds" ]; then
  # default database file
  DB="$D/pwd-full.srds"
elif [ -f "$D/../share/haveibeenpwned/pwd-full.srds" ]; then
  DB="$D/../share/haveibeenpwned/pwd-full.srds"
elif [ -f "pwd-full.srds" ]; then
  DB="pwd-full.srds"
else
  1>&2 echo "Error: unable to find password database file 'pwd-full.srds'"
  1>&2 echo "  did you execute 'get-pwned-passwords.sh'?"
  exit 10
fi

GBIN=$( which srdsgrep )
G="${GBIN} -m 1 -x"

if [ -z "${GBIN}" ]; then
  1>&2 echo "error: srdsgrep is NOT in PATH!"
  exit 10
fi
if [ ! -f "${GBIN}" ]; then
  1>&2 echo "error: srdsgrep is not installed at '${GBIN}'!"
  exit 10
fi
if [ ! -x "${GBIN}" ]; then
  1>&2 echo "error: srdsgrep '${GBIN}' is not executable!"
  exit 10
fi

if [ -z "$1" ]; then
  1>&2 echo "usage: $(basename "$S") '<password>' [-v] [-c] [-t]"
  1>&2 echo "  checks if given password is in the database of exposed/pawned passwords"
  1>&2 echo "  -v : print verbose output to stderr"
  1>&2 echo "  -c : print 0 / 1 only to stdout"
  1>&2 echo "  -t : time duration of grep"
  exit 10
fi

# unenrypted unhashed clear password!
P="$1"
shift

# set defaults: "verbosity", "print count" and "time duration"
V=0
C=0
T=0

while [ ! -z "$1" ]; do
  if [ "$1" == "-v" ]; then
    V=1
    shift
  elif [ "$1" == "-c" ]; then
    C=1
    shift
  elif [ "$1" == "-t" ]; then
    T=1
    shift
  else
    break
  fi
done

if [ ! -z "$1" ]; then
  1>&2 echo "warning: ignoring additional argument '$1' and following!"
fi


# get sha1sum - without trailing zero of echo - and without filename
SHA="$( echo -n "$P" |sha1sum - |awk '{ print $1; }' )"

if [ $V -gt 0 ]; then
  1>&2 echo "checking password '$P'"
  1>&2 echo "sha1sum of password is '${SHA}'"
  1>&2 echo "using sha1 password database '${DB}'"
  1>&2 echo "using grep command '$G'"
fi

if [ $T -gt 0 ]; then
  # the grep may take some time! time it for comparison:
  R=$( time ${G} -c ${SHA} ${DB} )
  if [ $V -gt 0 ]; then
    1>&2 echo "result of grep is: '$R'"
  fi
else
  # grep without timing
  R=$( ${G} -c ${SHA} ${DB} )
fi

if [ $C -gt 0 ]; then
  echo $R
else
  if [ $R -gt 0 ]; then
    echo "found password's sha1sum in database: password is pawned!"
  else
    echo "password not in database: password is OK"
  fi
fi
